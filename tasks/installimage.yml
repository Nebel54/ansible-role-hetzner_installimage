---

- name: check if server is booted in rescue mode
  stat:
    path: /root/.oldroot/nfs/install/installimage
  register: hetzner_install_file_present

- name: fail if server is not in rescue mode
  fail: msg="The server is not running in rescue mode."
  when: not hetzner_install_file_present.stat.exists

- name: copy public key into tempfile
  shell: /usr/bin/tail -1 /root/.ssh/authorized_keys > tmpKey

- name: copy autosetup configuration file
  template:
    src: installimage.j2
    dest: /autosetup
    owner: root
    group: root
    mode: 0644

- name: run installimage
  command: /root/.oldroot/nfs/install/installimage -K /root/tmpKey
  register: result

- name: reboot server
  shell: sleep 3 && shutdown -r now
  async: 1
  poll: 0
  ignore_errors: true

- name: pause a bit for the reboot to kick in
  pause: seconds=60

- name: remove server from local known_hosts file
  local_action: shell ssh-keygen -R {{ ansible_host }}

- name: waiting for server to come back
  local_action: wait_for
    host={{ ansible_host }}
    port=22
    delay=1
    timeout=180

- name: update apt
  raw: apt-get update

- name: install python on remote host
  raw: apt-get install python -y

- name: generate hostcode
  set_fact:
    _hostcode: "{{ ansible_host | md5 }}"

- name: create hostcode file
  template:
    src: hostcode.j2
    dest: /etc/hostcode
    owner: root
    group: root
    mode: 0644

- name: set the server_name
  delegate_to: localhost
  uri:
    url: "https://robot-ws.your-server.de/reset/{{ ansible_host }}"
    method: POST
    user: "{{ hetzner_installimage_webservice_username }}"
    password: "{{ hetzner_installimage_webservice_password }}"
    force_basic_auth: yes
    body: "server_name={{ hetzner_server_name }}"
    status_code: 200
    headers:
      Content-Type: application/x-www-form-urlencoded
  register: hetzner_installimage_rescue
  when: hetzner_server_name is defined

...
